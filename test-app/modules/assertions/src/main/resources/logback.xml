<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="300 seconds" debug="true" packagingData="false">
	<shutdownHook class="ch.qos.logback.core.hook.DefaultShutdownHook"/>

	<conversionRule conversionWord="clr"
					converterClass="ch.qos.logback.classic.pattern.color.HighlightingCompositeConverter"/>
	<conversionRule conversionWord="wex"
					converterClass="ch.qos.logback.classic.pattern.RootCauseFirstThrowableProxyConverter"/>

	<property scope="context" name="LOG_MAX_HISTORY" value="${log.file.maxHistory:-10}"/>

	<property scope="context" name="LOG_LEVEL" value="${logging.level:-INFO}"/>
	<property scope="context" name="LOG_LEVEL_ROOT" value="${logging.level.root:-INFO}"/>
	<property scope="context" name="LOG_FILE" value="${logging.file:-test-app-playground}"/>
	<property scope="context" name="LOG_PATH" value="${logging.path:-${java.io.tmpdir:-/tmp}}"/>

	<property scope="context" name="LOG_ARCHIVE_DIR" value="${LOG_PATH}/archive"/>

	<property name="CONSOLE_LOG_PATTERN"
			  value="${logging.pattern.console:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wex}}"/>
	<property name="FILE_LOG_PATTERN"
			  value="${logging.pattern.file:-%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level --- [%15.15t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wex}}"/>

	<!-- File appender configuration -->
	<appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_PATH}/${LOG_FILE}.log</file>
		<append>true</append>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- daily rollover -->
			<fileNamePattern>${LOG_ARCHIVE_DIR}/${LOG_FILE}_%d{yyyy-MM-dd}.log.gz</fileNamePattern>
			<!-- keep 30 days' worth of history capped at 3GB total size -->
			<maxHistory>${LOG_MAX_HISTORY}</maxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<charset>UTF-8</charset>
			<pattern>${FILE_LOG_PATTERN}</pattern>
			<outputPatternAsHeader>true</outputPatternAsHeader>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>INFO</level>
		</filter>
	</appender>

	<!-- Json appender configuration -->
	<appender name="JSON" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_PATH}/${LOG_FILE}.json</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_ARCHIVE_DIR}/${LOG_FILE}.%d{yyyy-MM-dd}.json</fileNamePattern>
			<maxHistory>7</maxHistory>
		</rollingPolicy>
		<encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
			<providers>
				<pattern>
					<omitEmptyFields>true</omitEmptyFields>
					<pattern>
						{
						"timestamp": "%d{yyyy-MM-dd'T'HH:mm:ss.SSSZZ}",
						"severity": "%level",
						"pid": "${PID:-}",
						"host": "${HOSTNAME}",
						"thread": "%thread",
						"class": "%logger{40}",
						"message": "%message",
						"file": "%file",
						"line": "%line"
						}
					</pattern>
				</pattern>
				<stackTrace>
					<throwableConverter class="net.logstash.logback.stacktrace.ShortenedThrowableConverter">
						<maxDepthPerThrowable>30</maxDepthPerThrowable>
						<maxLength>4096</maxLength>
						<shortenedClassNameLength>20</shortenedClassNameLength>
						<rootCauseFirst>true</rootCauseFirst>
					</throwableConverter>
				</stackTrace>
			</providers>
		</encoder>
	</appender>

	<!-- Console appender configuration -->
	<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<charset>UTF-8</charset>
			<pattern>${CONSOLE_LOG_PATTERN}</pattern>
		</encoder>
	</appender>

	<!-- Async appender configuration -->
	<appender name="ASYNC_FILE" class="ch.qos.logback.classic.AsyncAppender">
		<discardingThreshold>0</discardingThreshold>
		<queueSize>1024</queueSize>
		<appender-ref ref="FILE"/>
	</appender>

	<!-- Logger configuration -->
	<logger name="ROOT" level="${LOG_LEVEL}"/>
	<logger name="tech.arenadata.api.test.assertions" level="${LOG_LEVEL}" additivity="true">
		<appender-ref ref="ASYNC_FILE"/>
	</logger>

	<root level="${LOG_LEVEL_ROOT}">
		<appender-ref ref="ASYNC_FILE"/>
		<appender-ref ref="JSON"/>
		<appender-ref ref="CONSOLE"/>
	</root>
</configuration>
